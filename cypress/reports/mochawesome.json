{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2022-07-04T19:42:02.480Z",
    "end": "2022-07-04T19:43:20.712Z",
    "duration": 78232,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b6b59d95-b584-40a4-a7cf-1ed1ecbb15ba",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4c170585-365f-41a8-a6e8-79ad47533ec0",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "d2a89c31-c1ed-432c-b502-359994e033c4",
              "parentUUID": "4c170585-365f-41a8-a6e8-79ad47533ec0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2a89c31-c1ed-432c-b502-359994e033c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "39cfe87c-2b5d-4801-96d5-52ff73bbabd4",
              "parentUUID": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "5e20ee9a-659e-49f9-83fb-8b11fb2aeb39",
              "parentUUID": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "9afce623-c195-4bfa-9305-861946512286",
              "parentUUID": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "f20a5e24-7c4a-4be3-ba2b-af4fa3e75fbf",
              "parentUUID": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "6ba869be-88cc-4434-9ebd-db05b8d0be20",
              "parentUUID": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "e6dc683b-0e50-4fa6-beec-fcfb2e8c09c6",
              "parentUUID": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6e97d268-e90d-4a42-abcf-da577e5a9cf1",
              "parentUUID": "688e67d9-3f6c-4138-ab6c-197d10bb1212",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39cfe87c-2b5d-4801-96d5-52ff73bbabd4",
            "5e20ee9a-659e-49f9-83fb-8b11fb2aeb39",
            "9afce623-c195-4bfa-9305-861946512286",
            "f20a5e24-7c4a-4be3-ba2b-af4fa3e75fbf",
            "6ba869be-88cc-4434-9ebd-db05b8d0be20",
            "e6dc683b-0e50-4fa6-beec-fcfb2e8c09c6",
            "6e97d268-e90d-4a42-abcf-da577e5a9cf1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 761,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a3126b4d-1fe7-4fa6-8f23-6511408e75b8",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "82f209cb-c38a-4da0-9169-23c46fba7aba",
              "parentUUID": "a3126b4d-1fe7-4fa6-8f23-6511408e75b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ca2d8e9f-e67a-4106-9447-bf99b9ba57e3",
              "parentUUID": "a3126b4d-1fe7-4fa6-8f23-6511408e75b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82f209cb-c38a-4da0-9169-23c46fba7aba",
            "ca2d8e9f-e67a-4106-9447-bf99b9ba57e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 237,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "405e9587-8c9d-4980-bbe9-c4715ed5fe5d",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "a1b036e7-de4f-4927-9c67-1f9611d8a9e2",
              "parentUUID": "405e9587-8c9d-4980-bbe9-c4715ed5fe5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "f3c4b020-5379-4f5c-a589-5048f12be9fc",
              "parentUUID": "405e9587-8c9d-4980-bbe9-c4715ed5fe5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "db4206ba-af32-4482-84eb-72f78356e994",
              "parentUUID": "405e9587-8c9d-4980-bbe9-c4715ed5fe5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "466af278-37ff-41a1-8632-0f77f6c34bdd",
              "parentUUID": "405e9587-8c9d-4980-bbe9-c4715ed5fe5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1b036e7-de4f-4927-9c67-1f9611d8a9e2",
            "f3c4b020-5379-4f5c-a589-5048f12be9fc",
            "db4206ba-af32-4482-84eb-72f78356e994",
            "466af278-37ff-41a1-8632-0f77f6c34bdd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 420,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b9a974bf-6e04-4bdd-9d0a-932e210b0d49",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "b707b295-92d2-468f-8cb8-6ebb81da72b7",
              "parentUUID": "b9a974bf-6e04-4bdd-9d0a-932e210b0d49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "04bfdb1b-4cf5-4794-975b-3941c70bf6f9",
              "parentUUID": "b9a974bf-6e04-4bdd-9d0a-932e210b0d49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b707b295-92d2-468f-8cb8-6ebb81da72b7",
            "04bfdb1b-4cf5-4794-975b-3941c70bf6f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 440,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da3b2c3c-c3c8-4849-b151-01a5b26024bd",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "12d3fddc-f360-417d-83b8-4fdec6a9cb25",
              "parentUUID": "da3b2c3c-c3c8-4849-b151-01a5b26024bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "4323c28c-388f-4bc3-97f5-9727ac07700b",
              "parentUUID": "da3b2c3c-c3c8-4849-b151-01a5b26024bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12d3fddc-f360-417d-83b8-4fdec6a9cb25",
            "4323c28c-388f-4bc3-97f5-9727ac07700b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ec87e8a-c449-4dfa-8f92-2a62358bae97",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "a041876b-ec43-49c5-85ad-bfb961980238",
              "parentUUID": "2ec87e8a-c449-4dfa-8f92-2a62358bae97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8811,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "28353ca2-06a2-4611-8c6c-51b2709093af",
              "parentUUID": "2ec87e8a-c449-4dfa-8f92-2a62358bae97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a041876b-ec43-49c5-85ad-bfb961980238",
            "28353ca2-06a2-4611-8c6c-51b2709093af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9358,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "afb20503-28da-4d05-9c3c-ff99af088cf0",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2083,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "6c5681ff-f270-440a-ab23-cceb663df3c7",
              "parentUUID": "afb20503-28da-4d05-9c3c-ff99af088cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "3060ae8f-7834-41d6-9372-d381891d1714",
              "parentUUID": "afb20503-28da-4d05-9c3c-ff99af088cf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "92580c75-1139-4710-96d1-9c690d47f50f",
              "parentUUID": "afb20503-28da-4d05-9c3c-ff99af088cf0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c5681ff-f270-440a-ab23-cceb663df3c7",
            "3060ae8f-7834-41d6-9372-d381891d1714",
            "92580c75-1139-4710-96d1-9c690d47f50f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11889,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "874c8a9c-50ba-47f5-82cb-54d04ca097c6",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "80a94946-124f-46b7-a2c6-c578fce61418",
              "parentUUID": "874c8a9c-50ba-47f5-82cb-54d04ca097c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "c36f8d81-d309-499a-8353-f392021c31d8",
              "parentUUID": "874c8a9c-50ba-47f5-82cb-54d04ca097c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 65,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "1c8c7065-27de-4fbd-915f-720edb7611dd",
              "parentUUID": "874c8a9c-50ba-47f5-82cb-54d04ca097c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2260,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c427659e-c44a-4e35-bcbc-d4898cc20d44",
              "parentUUID": "874c8a9c-50ba-47f5-82cb-54d04ca097c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80a94946-124f-46b7-a2c6-c578fce61418",
            "c36f8d81-d309-499a-8353-f392021c31d8",
            "1c8c7065-27de-4fbd-915f-720edb7611dd",
            "c427659e-c44a-4e35-bcbc-d4898cc20d44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37f5f2ed-9126-4921-94a5-30bae4657232",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4204,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cac8b824-d74a-4fbb-b427-be2b05c9f41a",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4239,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "694c1ddf-0e82-4afc-8626-e51ae7817ff1",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4192,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1f0cbea9-3885-408e-99e9-70d6700c09b6",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4199,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "69c768df-7a1d-4641-888a-a263b8164e56",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "96d25278-d36c-4f6f-ac57-2988b6dc4e51",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4247,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "33b81bf8-e684-4772-a7a3-618e692425f3",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4220,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7e15d7fd-6a93-4f99-834c-20b7b31468bd",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "926848db-0ea9-431b-ac22-ad8fb54f8ca2",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4319,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8765908f-fde4-4696-9232-ca636b31ab0a",
              "parentUUID": "37f5f2ed-9126-4921-94a5-30bae4657232",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cac8b824-d74a-4fbb-b427-be2b05c9f41a",
            "694c1ddf-0e82-4afc-8626-e51ae7817ff1",
            "1f0cbea9-3885-408e-99e9-70d6700c09b6",
            "69c768df-7a1d-4641-888a-a263b8164e56",
            "96d25278-d36c-4f6f-ac57-2988b6dc4e51",
            "33b81bf8-e684-4772-a7a3-618e692425f3",
            "7e15d7fd-6a93-4f99-834c-20b7b31468bd",
            "926848db-0ea9-431b-ac22-ad8fb54f8ca2",
            "8765908f-fde4-4696-9232-ca636b31ab0a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38051,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2562682a-21ff-45f4-9086-556d69d088aa",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4223,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f2ce6a7d-337c-40b0-9aef-88a33f4d99c4",
              "parentUUID": "2562682a-21ff-45f4-9086-556d69d088aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4208,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a4d457d4-0b97-4fed-a70a-b770447a619b",
              "parentUUID": "2562682a-21ff-45f4-9086-556d69d088aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4195,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5a7e067e-a508-4d55-814a-f22cc377edf2",
              "parentUUID": "2562682a-21ff-45f4-9086-556d69d088aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f2ce6a7d-337c-40b0-9aef-88a33f4d99c4",
            "a4d457d4-0b97-4fed-a70a-b770447a619b",
            "5a7e067e-a508-4d55-814a-f22cc377edf2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b2ba018-3f05-4d54-a8a9-5ebcf115f523",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "b7784910-742e-4aff-b5bb-73f0d392b8c2",
              "parentUUID": "6b2ba018-3f05-4d54-a8a9-5ebcf115f523",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "6adf9364-5fba-41b7-bab7-7fdc50df304f",
              "parentUUID": "6b2ba018-3f05-4d54-a8a9-5ebcf115f523",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7784910-742e-4aff-b5bb-73f0d392b8c2",
            "6adf9364-5fba-41b7-bab7-7fdc50df304f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 751,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}